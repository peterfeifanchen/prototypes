A unique_ptr in C++ ensures that only a single instance of an object exists. If it is re-assigned
to another reference, it must use std::move. Otherwise, a compiler error would be thrown as 
unique_ptr( const unique_ptr&) = delete for unique_ptr. 

A classic method for unique_ptr instantiation is:

   std::unique_ptr<T>( new T( args... ) );

This can be shortened with the alias make_unique:
   make_unique<T>( args... );

Access unique_ptr<T> wrapped objects of type T uses the same operator as if it was a function
(e.g., ->).
